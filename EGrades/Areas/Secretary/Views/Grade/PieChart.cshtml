@model EGrades.Models.ViewModels.GradeChartViewModel

@{
    ViewData["Title"] = @Model.Title;
    Layout = "~/Areas/Secretary/Views/Shared/_SecretaryLayout.cshtml";
}

@{
    var XLabels = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Reports.Select(x => x.DimensionOne).ToList());
    var YValues = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Reports.Select(x => x.Quantity).ToList());
}

<h1>@Model.Title</h1>

<hr />

<strong>Μάθημα:</strong> @Model.Course
<br />
<strong>Εξεταστική Περίοδος:</strong> @Model.ExamPeriod

<hr />

<div class="box-body">
    <div class="chart-container">
        <canvas id="chart"></canvas>
    </div>
</div>

<hr />

<a class="btn btn-primary" href="javascript:history.go(-1)" role="button">Πίσω</a>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ChartLayout");

        <script>
            $(function () {
                var chartName = "chart";
                var ctx = document.getElementById(chartName).getContext('2d');

                var data = {
                    labels: @Html.Raw(XLabels),
                    datasets: [{
                        label: "Grades Chart",
                        backgroundColor: [
                            'rgba(255, 99, 132, 0.2)',
                            'rgba(54, 162, 235, 0.2)',
                            'rgba(255, 206, 86, 0.2)',
                            'rgba(75, 192, 192, 0.2)',
                            'rgba(153, 102, 255, 0.2)',
                            'rgba(255, 159, 64, 0.2)',
                            'rgba(255, 0, 0)',
                            'rgba(0, 255, 0)',
                            'rgba(0, 0, 255)',
                            'rgba(192, 192, 192)',
                            'rgba(255, 255, 0)',
                            'rgba(255, 0, 255)'
                        ],
                        borderColor: [
                            'rgba(255,99,132,1)',
                            'rgba(54, 162, 235, 1)',
                            'rgba(255, 206, 86, 1)',
                            'rgba(75, 192, 192, 1)',
                            'rgba(153, 102, 255, 1)',
                            'rgba(255, 159, 64, 1)',
                            'rgba(255, 0, 0)',
                            'rgba(0, 255, 0)',
                            'rgba(0, 0, 255)',
                            'rgba(192, 192, 192)',
                            'rgba(255, 255, 0)',
                            'rgba(255, 0, 255)'
                        ],
                        borderWidth: 1,
                        data: @Html.Raw(YValues)
                    }]
                };

                var options = {
                    maintainAspectRatio: false,
                    scales: {
                        yAxes: [{
                            ticks: {
                                min: 0,
                                beginAtZero: true
                            },
                            gridLines: {
                                display: true,
                                color: "rgba(255,99,164,0.2)"
                            }
                        }],
                        xAxes: [{
                            ticks: {
                                min: 0,
                                beginAtZero: true
                            },
                            gridLines: {
                                display: false
                            }
                        }]
                    }
                };

                var myChart = new  Chart(ctx, {
                    options: options,
                    data: data,
                    type:'pie'
                });

            });
        </script>
    }
}